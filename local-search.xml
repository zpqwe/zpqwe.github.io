<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>DockerFile构建SpringBoot镜像</title>
    <link href="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/"/>
    <url>/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<html><head></head><body><h1>DockerFile构建Springboot镜像</h1><p><strong>本次文档基础上默认用户已经安装好Docker，不执行安装</strong></p><h2 id="一、首先创建一个Springboot应用">一、首先创建一个Springboot应用</h2><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214202833999.png" alt="image-20250214202833999"></p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214202941746.png" alt="image-20250214202941746"></p><p>选择Spring Web，然后一直，下一步</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214203106472.png" alt="image-20250214203106472"></p><p>只需要一个Controller验证效果就可以了。</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214203311650.png" alt="image-20250214203311650"></p><h4 id="font-color-red-记录我遇到的问题-font"><font color="red"><strong>记录我遇到的问题</strong></font></h4><p>java: 错误: 无效的源发行版：15 （程序运行时出现无效的源发行版）</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214203850281.png" alt="image-20250214203850281"></p><p><strong>这个地方也需要修改成8的版本</strong></p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214204140235.png" alt="image-20250214204140235"></p><p>查资料发现，Springboot的版本与jdk的版本不对应。</p><p><font color="Red"><strong>Springboot3.0以上的版本其<em>支持</em>的最低Java<em>版本</em>为<em>JDK</em> 17</strong></font></p><p><strong>本次测试的jdk版本为jdk8，所以需要调整pom文件依赖至3.0以下</strong></p><p><strong>此刻程序正常启动</strong></p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214204310910.png" alt="image-20250214204310910"></p><p>现在让我们将程序打成一个jar包，执行命令：<strong>mvn package</strong></p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214204532525.png" alt="image-20250214204532525"></p><p>OK，前置工作已准备好，现在先让我们来创建一个Dockerfile文件</p><p>1、通过阿里云镜像仓库找到openjdk的基础镜像地址</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214204723546.png" alt="image-20250214204723546"></p><h2 id="二、创建Dockerfile">二、创建Dockerfile</h2><p>根据个人的版本选择，这里我选择的jdk8的版本</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214204816994.png" alt="image-20250214204816994"></p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214204838954.png" alt="image-20250214204838954"></p><figure class="highlight dockerfile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment">#使用openjdk作为基础镜像</span><br><span class="hljs-keyword">FROM</span> anolis-registry.cn-zhangjiakou.cr.aliyuncs.com/openanolis/openjdk:<span class="hljs-number">8</span>-<span class="hljs-number">8.6</span><br><span class="hljs-comment">#设置作者信息</span><br><span class="hljs-keyword">LABEL</span><span class="language-bash"> authors=<span class="hljs-string">"Zengping"</span></span><br><span class="hljs-comment">#构建镜像需要执行的命令</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> /home/hello1235</span><br><span class="hljs-comment">#设置工作目录</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> <span class="hljs-string">"/home/hello1235"</span></span><br><span class="hljs-comment">#将打包后的jar复制到指定目录</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> ./demo-0.0.1-SNAPSHOT.jar /home/hello1235/hello.jar</span><br><span class="hljs-comment">#容器暴露的端口</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">8080</span><br><span class="hljs-comment">#运行命令</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">"java"</span>,<span class="hljs-string">"-jar"</span>,<span class="hljs-string">"/home/hello1235/hello.jar"</span>]</span><br><br></code></pre></td></tr></tbody></table></figure><h2 id="三、将jar包与Dockerfile文件一起上传至服务器">三、将jar包与Dockerfile文件一起上传至服务器</h2><p>dockerfile文件写好之后，就上传到服务器上或虚拟机上，本次示例中使用的是虚拟机，ubuntu</p><p>通过xftp将jar包以及Dockerfile文件上传至指定目录</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214205902487.png" alt="image-20250214205902487"></p><h2 id="四、执行命令构建镜像">四、执行命令构建镜像</h2><p><code>docker build -t hello2:v1 .</code></p><p>容器构建成功！</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214211125864.png" alt="image-20250214211125864"></p><p>通过 docker images 命令可以看到，已经有一个叫hello2的镜像存在了。</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214211308245.png" alt="image-20250214211308245"></p><h2 id="五、启动镜像">五、启动镜像</h2><p>执行docker run 命令</p><p><code>docker run -d -p 8090:8080 --name=myhello 2fcb959ced7d</code></p><p>docker run 命令详解：</p><p>-d 表示后台启动</p><p>-p 宿主机的端口8090 映射容器暴露出来的8080端口</p><p>–name 容器别名</p><p>容器id 2fcb959ced7d</p><p>docker ps查看，容器启动成功！</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214213102171.png" alt="image-20250214213102171"></p><h2 id="六、查看效果，成功">六、查看效果，成功</h2><p>前往浏览器查看效果，执行成功！</p><p><img src="/2025/02/14/DockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F/E:%5Cproject%5Chexo-blog%5Csource_posts%5CDockerFile%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F%5Cimage-20250214213152833.png" alt="image-20250214213152833"></p></body></html>]]></content>
    
    
    
    <tags>
      
      <tag>Dockerfile</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2025/02/12/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2025/02/12/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<html><head></head><body><p>这是一片测试文章</p><p><img src="/2025/02/12/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.jpg" alt=""></p></body></html>]]></content>
    
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/12/hello-world/"/>
    <url>/2025/02/12/hello-world/</url>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p></body></html>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
